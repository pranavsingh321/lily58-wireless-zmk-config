/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define P_Q 0
#define P_W 1
#define P_F 2
#define P_P 3
#define P_B 4
#define P_J 5
#define P_L 6
#define P_U 7
#define P_Y 8
#define P_SEMI 9
#define P_A 10
#define P_R 11
#define P_S 12
#define P_T 13
#define P_G 14
#define P_M 15
#define P_N 16
#define P_E 17
#define P_I 18
#define P_O 19
#define P_Z 20
#define P_X 21
#define P_C 22
#define P_D 23
#define P_V 24
#define P_K 25
#define P_H 26
#define P_COMA 27
#define P_DOT 28
#define P_SQT 29
#define P_COMBO 31 32
#define COMBO_TIMEOUT 200
#define MACRO_TAP 10
#define MACRO_WAIT 0

&mt {
    tapping-term-ms = <500>;
    flavor = "tap-preferred";
};

/ {
    macros {
        gmail: gmail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(T)>;
            label = "GMAIL";
        };

        tmuxnew: tmuxnew {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RC(B) &kp PERCENT>;
            label = "TMUXNEW";
        };

        tmuxv: tmuxv {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp DOUBLE_QUOTES>;
            label = "TMUXV";
        };

        tleft: tleft {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp LEFT>;
            label = "TLEFT";
        };

        tright: tright {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp RIGHT_ARROW>;
            label = "TRIGHT";
        };

        vq: vq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp COLON &kp Q &kp ENTER>;
            label = "VQ";
        };

        vw: vw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp COLON &kp W &kp ENTER>;
            label = "VW";
        };

        vx: vx {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp COLON &kp X &kp ENTER>;
            label = "VX";
        };

        tzoom: tzoom {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp Z>;
            label = "TZOOM";
        };

        nvm: nvm {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RC(RS(V)) &kp RCTRL &kp LEFT_SHIFT>;
            label = "NVM";
        };

        cc: cc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RC(RS(C))>;
            label = "CC";
        };

        tup: tup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RC(B) &kp UP_ARROW>;
            label = "TUP";
        };

        tdown: tdown {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RC(B) &kp DOWN>;
            label = "TDOWN";
        };

        cv: cv {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RC(RS(V))>;
            label = "CV";
        };

        tmove: tmove {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RC(B) &kp LEFT_BRACKET>;
            label = "TMOVE";
        };

        tbegin: tbegin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RC(B)>;
            label = "TBEGIN";
        };

        tpaste: tpaste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RC(B) &kp RIGHT_BRACKET>;
            label = "TPASTE";
        };

        breakpoint: breakpoint {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp R &kp E &kp A &kp K &kp P &kp O &kp I &kp N &kp T &kp LPAR &kp RPAR>;
            label = "BREAKPOINT";
        };

        about: about {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp B &kp O &kp U &kp T>;
            label = "ABOUT";
        };

        above: above {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp B &kp O &kp V &kp E>;
            label = "ABOVE";
        };

        after: after {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp F &kp T &kp E &kp R>;
            label = "AFTER";
        };

        again: again {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp G &kp A &kp I &kp N>;
            label = "AGAIN";
        };

        along: along {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp L &kp O &kp N &kp G>;
            label = "ALONG";
        };

        also: also {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp L &kp S &kp O>;
            label = "ALSO";
        };

        always: always {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp L &kp W &kp A &kp Y &kp S>;
            label = "ALWAYS";
        };

        animal: animal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp N &kp I &kp M &kp A &kp L>;
            label = "ANIMAL";
        };

        another: another {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp N &kp O &kp T &kp H &kp E &kp R>;
            label = "ANOTHER";
        };

        answer: answer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp N &kp S &kp W &kp E &kp R>;
            label = "ANSWER";
        };

        around: around {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp R &kp O &kp U &kp N &kp D>;
            label = "AROUND";
        };

        ask: ask {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp S &kp K>;
            label = "ASK";
        };

        away: away {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp W &kp A &kp Y>;
            label = "AWAY";
        };

        because: because {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp E &kp C &kp A &kp U &kp S &kp E>;
            label = "BECAUSE";
        };

        before: before {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp E &kp F &kp O &kp R &kp E>;
            label = "BEFORE";
        };

        began: began {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp E &kp G &kp A &kp N>;
            label = "BEGAN";
        };

        begin: begin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp E &kp G &kp I &kp N>;
            label = "BEGIN";
        };

        being: being {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp E &kp I &kp N &kp G>;
            label = "BEING";
        };

        below: below {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp E &kp L &kp O &kp W>;
            label = "BELOW";
        };

        between: between {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp E &kp T &kp W &kp E &kp E &kp N>;
            label = "BETWEEN";
        };

        book: book {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp O &kp O &kp K>;
            label = "BOOK";
        };

        both: both {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp O &kp T &kp H>;
            label = "BOTH";
        };

        carry: carry {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp A &kp R &kp R &kp Y>;
            label = "CARRY";
        };

        change: change {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp H &kp A &kp N &kp G &kp E>;
            label = "CHANGE";
        };

        children: children {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp H &kp I &kp L &kp D &kp R &kp E &kp N>;
            label = "CHILDREN";
        };

        close: close {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp L &kp O &kp S &kp E>;
            label = "CLOSE";
        };

        come: come {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp M &kp E>;
            label = "COME";
        };

        could: could {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp U &kp L &kp D>;
            label = "COULD";
        };

        country: country {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp U &kp N &kp T &kp R &kp Y>;
            label = "COUNTRY";
        };

        different: different {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp I &kp F &kp F &kp E &kp R &kp E &kp N &kp T>;
            label = "DIFFERENT";
        };

        does: does {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp O &kp E &kp S>;
            label = "DOES";
        };

        dont: dont {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp O &kp N &kp T>;
            label = "DONT";
        };

        down: down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp O &kp W &kp N>;
            label = "DOWN";
        };

        earth: earth {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp A &kp R &kp T &kp H>;
            label = "EARTH";
        };

        enough: enough {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp N &kp O &kp U &kp G &kp H &kp T>;
            label = "ENOUGH";
        };

        even: even {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp V &kp E &kp N>;
            label = "EVEN";
        };

        every: every {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp V &kp E &kp R &kp Y>;
            label = "EVERY";
        };

        example: example {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp X &kp A &kp M &kp P &kp L &kp E>;
            label = "EXAMPLE";
        };

        family: family {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp A &kp M &kp I &kp L &kp Y>;
            label = "FAMILY";
        };

        father: father {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp A &kp T &kp H &kp E &kp R>;
            label = "FATHER";
        };

        feet: feet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp E &kp E &kp T>;
            label = "FEET";
        };

        find: find {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp I &kp N &kp D>;
            label = "FIND";
        };

        first: first {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp I &kp R &kp S &kp T>;
            label = "FIRST";
        };

        follow: follow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp O &kp L &kp L &kp O &kp W>;
            label = "FOLLOW";
        };

        food: food {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp O &kp O &kp D>;
            label = "FOOD";
        };

        form: form {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp O &kp R &kp M>;
            label = "FORM";
        };

        found: found {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp O &kp U &kp N &kp D>;
            label = "FOUND";
        };

        four: four {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp O &kp U &kp R>;
            label = "FOUR";
        };

        from: from {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp R &kp O &kp M>;
            label = "FROM";
        };

        girl: girl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp R &kp L &kp O>;
            label = "GIRL";
        };

        give: give {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp I &kp V &kp E>;
            label = "GIVE";
        };

        good: good {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp O &kp O &kp D>;
            label = "GOOD";
        };

        great: great {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp R &kp E &kp A &kp T>;
            label = "GREAT";
        };

        group: group {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp R &kp O &kp U &kp P &kp T>;
            label = "GROUP";
        };

        grow: grow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp R &kp O &kp W>;
            label = "GROW";
        };

        hand: hand {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp A &kp N &kp D>;
            label = "HAND";
        };

        hard: hard {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp A &kp R &kp D>;
            label = "HARD";
        };

        have: have {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp A &kp V &kp E>;
            label = "HAVE";
        };

        head: head {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp E &kp A &kp D>;
            label = "HEAD";
        };

        hear: hear {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp E &kp A &kp R>;
            label = "HEAR";
        };

        hello: hello {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp E &kp L &kp L &kp O>;
            label = "HELLO";
        };

        help: help {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp E &kp L &kp P>;
            label = "HELP";
        };

        high: high {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp I &kp G &kp H>;
            label = "HIGH";
        };

        home: home {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp O &kp M &kp E>;
            label = "HOME";
        };

        house: house {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp O &kp U &kp S &kp E>;
            label = "HOUSE";
        };

        how: how {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp O &kp W>;
            label = "HOW";
        };

        idea: idea {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp D &kp E &kp A>;
            label = "IDEA";
        };

        important: important {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp M &kp P &kp O &kp R &kp T &kp A &kp N &kp T>;
            label = "IMPORTANT";
        };

        into: into {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp N &kp T &kp O>;
            label = "INTO";
        };

        just: just {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp J &kp U &kp S &kp T>;
            label = "JUST";
        };

        keep: keep {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp E &kp E &kp P>;
            label = "KEEP";
        };

        kind: kind {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp I &kp N &kp D>;
            label = "KIND";
        };

        know: know {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp N &kp O &kp W>;
            label = "KNOW";
        };

        large: large {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp A &kp R &kp G &kp E>;
            label = "LARGE";
        };

        last: last {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp A &kp S &kp T>;
            label = "LAST";
        };

        later: later {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp A &kp T &kp E &kp R>;
            label = "LATER";
        };

        learn: learn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp E &kp A &kp R &kp N>;
            label = "LEARN";
        };

        leave: leave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp E &kp A &kp V &kp E>;
            label = "LEAVE";
        };

        left: left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp E &kp F &kp T>;
            label = "LEFT";
        };

        letter: letter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp E &kp T &kp T &kp E &kp R>;
            label = "LETTER";
        };

        life: life {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp I &kp F &kp E>;
            label = "LIFE";
        };

        light: light {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp I &kp G &kp H &kp T>;
            label = "LIGHT";
        };

        like: like {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp I &kp K &kp E>;
            label = "LIKE";
        };

        line: line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp I &kp N &kp E>;
            label = "LINE";
        };

        list: list {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp I &kp S &kp T>;
            label = "LIST";
        };

        little: little {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp I &kp T &kp T &kp L &kp E>;
            label = "LITTLE";
        };

        live: live {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp I &kp V &kp E>;
            label = "LIVE";
        };

        long: long {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp O &kp N &kp G>;
            label = "LONG";
        };

        look: look {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp O &kp O &kp K>;
            label = "LOOK";
        };

        make: make {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp A &kp K &kp E>;
            label = "MAKE";
        };

        many: many {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp A &kp N &kp Y>;
            label = "MANY";
        };

        mean: mean {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp E &kp A &kp N>;
            label = "MEAN";
        };

        might: might {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp I &kp G &kp H &kp T>;
            label = "MIGHT";
        };

        mile: mile {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp I &kp L &kp E>;
            label = "MILE";
        };

        miss: miss {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp I &kp S &kp S>;
            label = "MISS";
        };

        more: more {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp O &kp R &kp E>;
            label = "MORE";
        };

        most: most {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp O &kp S &kp T>;
            label = "MOST";
        };

        mother: mother {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp O &kp T &kp H &kp E &kp R>;
            label = "MOTHER";
        };

        mountain: mountain {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp O &kp U &kp N &kp T &kp A &kp I &kp N>;
            label = "MOUNTAIN";
        };

        move: move {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp O &kp V &kp E>;
            label = "MOVE";
        };

        much: much {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp U &kp C &kp H>;
            label = "MUCH";
        };

        must: must {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp U &kp S &kp T>;
            label = "MUST";
        };

        name: name {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp A &kp M &kp E>;
            label = "NAME";
        };

        near: near {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp E &kp A &kp R>;
            label = "NEAR";
        };

        need: need {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp E &kp E &kp D>;
            label = "NEED";
        };

        never: never {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp E &kp V &kp E &kp R>;
            label = "NEVER";
        };

        next: next {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp E &kp X &kp T>;
            label = "NEXT";
        };

        night: night {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp I &kp G &kp H &kp T>;
            label = "NIGHT";
        };

        number: number {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp U &kp M &kp B &kp E &kp R>;
            label = "NUMBER";
        };

        often: often {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp F &kp T &kp E &kp N>;
            label = "OFTEN";
        };

        open: open {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp P &kp E &kp N>;
            label = "OPEN";
        };

        other: other {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp T &kp H &kp E &kp R>;
            label = "OTHER";
        };

        over: over {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp V &kp E &kp R>;
            label = "OVER";
        };

        page: page {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp A &kp G &kp E>;
            label = "PAGE";
        };

        paper: paper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp A &kp P &kp E &kp R>;
            label = "PAPER";
        };

        part: part {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp A &kp R &kp T>;
            label = "PART";
        };

        people: people {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp E &kp O &kp P &kp L &kp E>;
            label = "PEOPLE";
        };

        picture: picture {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp I &kp C &kp T &kp U &kp R &kp E>;
            label = "PICTURE";
        };

        place: place {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp L &kp A &kp C &kp E>;
            label = "PLACE";
        };

        plant: plant {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp L &kp A &kp N &kp T>;
            label = "PLANT";
        };

        play: play {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp L &kp A &kp Y>;
            label = "PLAY";
        };

        point: point {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp O &kp I &kp N &kp T>;
            label = "POINT";
        };

        question: question {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp U &kp E &kp S &kp T &kp I &kp O &kp N>;
            label = "QUESTION";
        };

        quick: quick {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp U &kp I &kp C &kp K>;
            label = "QUICK";
        };

        quickly: quickly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp U &kp I &kp C &kp K &kp L &kp Y>;
            label = "QUICKLY";
        };

        quite: quite {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp U &kp I &kp T &kp E>;
            label = "QUITE";
        };

        read: read {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp E &kp A &kp D>;
            label = "READ";
        };

        really: really {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp E &kp A &kp L &kp L &kp Y>;
            label = "REALLY";
        };

        right: right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp I &kp G &kp H &kp T>;
            label = "RIGHT";
        };

        river: river {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp I &kp V &kp E &kp R>;
            label = "RIVER";
        };

        run: run {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp U &kp N>;
            label = "RUN";
        };

        said: said {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp A &kp I &kp D>;
            label = "SAID";
        };

        same: same {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp A &kp M &kp E>;
            label = "SAME";
        };

        saw: saw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp A &kp W>;
            label = "SAW";
        };

        say: say {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp A &kp Y>;
            label = "SAY";
        };

        school: school {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp C &kp H &kp O &kp O &kp L &kp E>;
            label = "SCHOOL";
        };

        second: second {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp E &kp C &kp O &kp N &kp D>;
            label = "SECOND";
        };

        see: see {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp E &kp E>;
            label = "SEE";
        };

        sentence: sentence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp E &kp N &kp T &kp E &kp N &kp C &kp E>;
            label = "SENTENCE";
        };

        set: set {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp E &kp T>;
            label = "SET";
        };

        she: she {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp H &kp E>;
            label = "SHE";
        };

        should: should {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp H &kp O &kp U &kp L &kp D>;
            label = "SHOULD";
        };

        show: show {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp H &kp O &kp W>;
            label = "SHOW";
        };

        side: side {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp I &kp D &kp E>;
            label = "SIDE";
        };

        small: small {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp M &kp A &kp L &kp L &kp Y>;
            label = "SMALL";
        };

        some: some {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp O &kp M &kp E>;
            label = "SOME";
        };

        something: something {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp O &kp M &kp E &kp T &kp H &kp I &kp N &kp G>;
            label = "SOMETHING";
        };

        sometimes: sometimes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp O &kp M &kp E &kp T &kp I &kp M &kp E &kp S>;
            label = "SOMETIMES";
        };

        song: song {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp O &kp N &kp G>;
            label = "SONG";
        };

        soon: soon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp O &kp O &kp N>;
            label = "SOON";
        };

        sound: sound {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp O &kp U &kp N &kp D>;
            label = "SOUND";
        };

        spell: spell {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp P &kp E &kp L &kp L>;
            label = "SPELL";
        };

        start: start {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp T &kp A &kp R &kp T>;
            label = "START";
        };

        state: state {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp T &kp A &kp T &kp E>;
            label = "STATE";
        };

        still: still {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp T &kp I &kp L &kp L>;
            label = "STILL";
        };

        stop: stop {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp T &kp O &kp P>;
            label = "STOP";
        };

        story: story {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp T &kp O &kp R &kp Y>;
            label = "STORY";
        };

        straight: straight {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp T &kp R &kp A &kp I &kp G &kp H &kp T>;
            label = "SRAIGHT";
        };

        study: study {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp T &kp U &kp D &kp Y>;
            label = "STUDY";
        };

        take: take {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp A &kp K &kp E>;
            label = "TAKE";
        };

        talk: talk {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp A &kp L &kp K>;
            label = "TALK";
        };

        than: than {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp A &kp N>;
            label = "THAN";
        };

        that: that {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp A &kp T>;
            label = "THAT";
        };

        their: their {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp E &kp I &kp R>;
            label = "THEIR";
        };

        them: them {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp E &kp M>;
            label = "THEM";
        };

        technology: technology {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp E &kp C &kp H>;
            label = "TECH";
        };

        then: then {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp E &kp N>;
            label = "THEN";
        };

        there: there {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp E &kp R &kp E>;
            label = "THERE";
        };

        these: these {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp E &kp S &kp E>;
            label = "THESE";
        };

        they: they {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp E &kp Y>;
            label = "THEY";
        };

        thing: thing {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp I &kp N &kp G>;
            label = "THING";
        };

        think: think {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp I &kp N &kp K>;
            label = "THINK";
        };

        this: this {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp I &kp S>;
            label = "THIS";
        };

        those: those {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp O &kp S &kp E>;
            label = "THOSE";
        };

        thought: thought {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp O &kp U &kp G &kp H &kp T>;
            label = "THOUGHT";
        };

        three: three {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp R &kp E &kp E>;
            label = "THREE";
        };

        through: through {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp R &kp O &kp U &kp G &kp H>;
            label = "THROUGH";
        };

        time: time {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp I &kp M &kp E>;
            label = "TIME";
        };

        together: together {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp O &kp G &kp E &kp T &kp H &kp E &kp R>;
            label = "TOGETHER";
        };

        tomorrow: tomorrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp O &kp M &kp O &kp R &kp R &kp O &kp W>;
            label = "TOMORROW";
        };

        took: took {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp O &kp O &kp K>;
            label = "TOOK";
        };

        tree: tree {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp R &kp E &kp E>;
            label = "TREE";
        };

        try: try {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp R &kp Y>;
            label = "TRY";
        };

        turn: turn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp U &kp R &kp N>;
            label = "TURN";
        };

        under: under {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N &kp D &kp E &kp R>;
            label = "UNDER";
        };

        value: value {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp V &kp A &kp L &kp U &kp E>;
            label = "VALUE";
        };

        very: very {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp V &kp E &kp R &kp Y>;
            label = "VERY";
        };

        want: want {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp A &kp N &kp T>;
            label = "WANT";
        };

        what: what {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp H &kp A &kp T>;
            label = "WHAT";
        };

        when: when {
            bindings = <&kp W &kp H &kp E &kp N>;
            label = "WHEN";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
        };

        where: where {
            bindings = <&kp W &kp H &kp E &kp R &kp E>;
            label = "WHERE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
        };

        which: which {
            bindings = <&kp W &kp H &kp I &kp C &kp H>;
            label = "WHICH";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
        };

        world: world {
            bindings = <&kp W &kp O &kp R &kp L &kp D>;
            label = "WORLD";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
        };

        would: would {
            bindings = <&kp W &kp O &kp U &kp L &kp D>;
            label = "WOULD";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
        };

        write: write {
            bindings = <&kp W &kp R &kp I &kp T &kp E>;
            label = "WRITE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
        };

        year: year {
            bindings = <&kp Y &kp E &kp A &kp R>;
            label = "YEAR";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
        };

        you: you {
            bindings = <&kp Y &kp O &kp U>;
            label = "YOU";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
        };

        yourself: yourself {
            bindings = <&kp Y &kp O &kp U &kp R &kp S &kp E &kp L &kp F>;
            label = "YOURSELF";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_about {
            bindings = <&about>;
            key-positions = <25 17>; // 'A' and 'B'
            // Key strokes: 'ab'
        };

        combo_above {
            bindings = <&above>;
            key-positions = <25 41>; // 'A' and 'V'
            // Key strokes: 'av'
        };

        combo_again {
            bindings = <&again>;
            key-positions = <25 29>; // 'A' and 'G'
            // Key strokes: 'ag'
        };

        combo_along {
            bindings = <&along>;
            key-positions = <25 19>; // 'A' and 'L'
            // Key strokes: 'al'
        };

        combo_also {
            bindings = <&also>;
            key-positions = <25 27>; // 'A' and 'S'
            // Key strokes: 'as'
        };

        combo_animal {
            bindings = <&animal>;
            key-positions = <25 31>; // 'A' and 'N'
            // Key strokes: 'an'
        };

        combo_answer {
            bindings = <&answer>;
            key-positions = <25 32>; // 'A' and 'E'
            // Key strokes: 'ae'
        };

        combo_away {
            bindings = <&away>;
            key-positions = <25 22>; // 'A' and 'Y'
            // Key strokes: 'ay'
        };

        combo_because {
            bindings = <&because>;
            key-positions = <17 39>; // 'A' and 'C'
            // Key strokes: 'bc'
        };

        combo_before {
            bindings = <&before>;
            key-positions = <17 15>; // 'A' and 'B'
            // Key strokes: 'bf'
        };

        combo_begin {
            bindings = <&begin>;
            key-positions = <17 31>; // 'A' and 'N'
            // Key strokes: 'bn'
        };

        combo_between {
            bindings = <&between>;
            key-positions = <17 13>; // 'A' and 'T'
            // Key strokes: 'bt'
        };

        combo_carry {
            bindings = <&carry>;
            key-positions = <39 22>; // 'A' and 'Y'
            // Key strokes: 'cy'
        };

        combo_change {
            bindings = <&change>;
            key-positions = <39 45>; // 'A' and 'C'
            // Key strokes: 'ch'
        };

        combo_children {
            bindings = <&children>;
            key-positions = <39 19>; // 'A' and 'L'
            // Key strokes: 'cl'
        };

        combo_close {
            bindings = <&close>;
            key-positions = <39 32>; // 'A' and 'C'
            // Key strokes: 'ce'
        };

        combo_could {
            bindings = <&could>;
            key-positions = <39 40>; // 'A' and 'D'
            // Key strokes: 'cd'
        };

        combo_country {
            bindings = <&country>;
            key-positions = <39 31>; // 'A' and 'N'
            // Key strokes: 'cn'
        };

        combo_different {
            bindings = <&different>;
            key-positions = <40 25>; // 'A' and 'F'
            // Key strokes: 'df'
        };

        combo_does {
            bindings = <&does>;
            key-positions = <40 34>; // 'A' and 'D'
            // Key strokes: 'do'
        };

        combo_dont {
            bindings = <&dont>;
            key-positions = <40 31>; // 'A' and 'N'
            // Key strokes: 'dn'
        };

        combo_down {
            bindings = <&down>;
            key-positions = <40 14>; // 'A' and 'W'
            // Key strokes: 'dw'
        };

        combo_earth {
            bindings = <&earth>;
            key-positions = <58 32 25>; // 'A' and 'E'
            // Key strokes: 'ea'
        };

        combo_enough {
            bindings = <&enough>;
            key-positions = <59 32 31>; // 'A' and 'N'
            // Key strokes: 'en'
        };

        combo_even {
            bindings = <&even>;
            key-positions = <60 32 41>; // 'A' and 'V'
            // Key strokes: 'ev'
        };

        combo_example {
            bindings = <&example>;
            key-positions = <62 32 38>; // 'A' and 'E'
            // Key strokes: 'ex'
        };

        combo_family {
            bindings = <&family>;
            key-positions = <63 15 30>; // 'A' and 'M'
            // Key strokes: 'fm'
        };

        combo_father {
            bindings = <&father>;
            key-positions = <64 15 25>; // 'A' and 'F'
            // Key strokes: 'fa'
        };

        combo_follow {
            bindings = <&follow>;
            key-positions = <68 15 34>; // 'A' and 'L'
            // Key strokes: 'fo'
        };

        combo_form {
            bindings = <&form>;
            key-positions = <70 15 30>; // 'A' and 'M'
            // Key strokes: 'fm'
        };

        combo_found {
            bindings = <&found>;
            key-positions = <71 15 20>; // 'A' and 'D'
            // Key strokes: 'fu'
        };

        combo_grow {
            bindings = <&grow>;
            key-positions = <79 29 14>; // 'A' and 'W'
            // Key strokes: 'gw'
        };

        combo_hand {
            bindings = <&hand>;
            key-positions = <80 45 25>; // 'A' and 'H'
            // Key strokes: 'ha'
        };

        combo_hard {
            bindings = <&hard>;
            key-positions = <81 45 26>; // 'A' and 'R'
            // Key strokes: 'hr'
        };

        combo_have {
            bindings = <&have>;
            key-positions = <82 45 41>; // 'A' and 'V'
            // Key strokes: 'hv'
        };

        combo_head {
            bindings = <&head>;
            key-positions = <83 45 40>; // 'A' and 'D'
            // Key strokes: 'hd'
        };

        combo_home {
            bindings = <&home>;
            key-positions = <88 45 30>; // 'A' and 'M'
            // Key strokes: 'hm'
        };

        combo_house {
            bindings = <&house>;
            key-positions = <89 45 34>; // 'A' and 'H'
            // Key strokes: 'ho'
        };

        combo_idea {
            bindings = <&idea>;
            key-positions = <90 33 40>; // 'A' and 'D'
            // Key strokes: 'id'
        };

        combo_into {
            bindings = <&into>;
            key-positions = <92 33 31>; // 'A' and 'N'
            // Key strokes: 'in'
        };

        combo_just {
            bindings = <&just>;
            key-positions = <93 18 28>; // 'A' and 'T'
            // Key strokes: 'jt'
        };

        combo_keep {
            bindings = <&keep>;
            key-positions = <94 44 16>; // 'A' and 'K'
            // Key strokes: 'kp'
        };

        combo_kind {
            bindings = <&kind>;
            key-positions = <95 44 40>; // 'A' and 'D'
            // Key strokes: 'kd'
        };

        combo_know {
            bindings = <&know>;
            key-positions = <96 44 14>; // 'A' and 'W'
            // Key strokes: 'kw'
        };

        combo_large {
            bindings = <&large>;
            key-positions = <97 19 29>; // 'A' and 'L'
            // Key strokes: 'lg'
        };

        combo_last {
            bindings = <&last>;
            key-positions = <98 19 28>; // 'A' and 'T'
            // Key strokes: 'lt'
        };

        combo_later {
            bindings = <&later>;
            key-positions = <99 19 26>; // 'A' and 'R'
            // Key strokes: 'lr'
        };

        combo_leave {
            bindings = <&leave>;
            key-positions = <101 19 41>; // 'A' and 'V'
            // Key strokes: 'lv'
        };

        combo_little {
            bindings = <&little>;
            key-positions = <109 19>; // 'A' and 'T'
            // Key strokes: 'lt'
        };

        combo_live {
            bindings = <&live>;
            key-positions = <110 19 28>; // 'A' and 'V'
            // Key strokes: 'lv'
        };

        combo_long {
            bindings = <&long>;
            key-positions = <111 19 34>; // 'A' and 'G'
            // Key strokes: 'lo'
        };

        combo_many {
            bindings = <&many>;
            key-positions = <114 30 31>; // 'A' and 'N'
            // Key strokes: 'mn'
        };

        combo_mean {
            bindings = <&mean>;
            key-positions = <115 30 32>; // 'A' and 'E'
            // Key strokes: 'me'
        };

        combo_might {
            bindings = <&might>;
            key-positions = <116 30 29>; // 'A' and 'G'
            // Key strokes: 'mg'
        };

        combo_more {
            bindings = <&more>;
            key-positions = <119 30 26>; // 'A' and 'R'
            // Key strokes: 'mr'
        };

        combo_most {
            bindings = <&most>;
            key-positions = <120 30 34>; // 'A' and 'O'
            // Key strokes: 'mo'
        };

        combo_mountain {
            bindings = <&mountain>;
            key-positions = <122 30 28>; // 'A' and 'T'
            // Key strokes: 'mt'
        };

        combo_move {
            bindings = <&move>;
            key-positions = <123 30 41>; // 'A' and 'V'
            // Key strokes: 'mv'
        };

        combo_much {
            bindings = <&much>;
            key-positions = <124 30 39>; // 'A' and 'C'
            // Key strokes: 'mc'
        };

        combo_near {
            bindings = <&near>;
            key-positions = <127 31>; // 'A' and 'R'
            // Key strokes: 'nr'
        };

        combo_never {
            bindings = <&never>;
            key-positions = <129 31 41>; // 'A' and 'V'
            // Key strokes: 'nv'
        };

        combo_next {
            bindings = <&next>;
            key-positions = <130 31 38>; // 'A' and 'X'
            // Key strokes: 'nx'
        };

        combo_night {
            bindings = <&night>;
            key-positions = <131 31 29>; // 'A' and 'G'
            // Key strokes: 'ng'
        };

        combo_number {
            bindings = <&number>;
            key-positions = <132 31 25>; // 'A' and 'U'
            // Key strokes: 'nu'
        };

        combo_often {
            bindings = <&often>;
            key-positions = <133 34 15>; // 'A' and 'F'
            // Key strokes: 'of'
        };

        combo_open {
            bindings = <&open>;
            key-positions = <134 34 16>; // 'A' and 'P'
            // Key strokes: 'op'
        };

        combo_other {
            bindings = <&other>;
            key-positions = <135 34 28>; // 'A' and 'T'
            // Key strokes: 'ot'
        };

        combo_over {
            bindings = <&over>;
            key-positions = <136 34 41>; // 'A' and 'V'
            // Key strokes: 'ov'
        };

        combo_people {
            bindings = <&people>;
            key-positions = <140 16 32>; // 'A' and 'P'
            // Key strokes: 'pe'
        };

        combo_place {
            bindings = <&place>;
            key-positions = <142 16 19>; // 'A' and 'L'
            // Key strokes: 'pl'
        };

        combo_plant {
            bindings = <&plant>;
            key-positions = <143 16 31>; // 'A' and 'N'
            // Key strokes: 'pn'
        };

        combo_play {
            bindings = <&play>;
            key-positions = <144 16 22>; // 'A' and 'Y'
            // Key strokes: 'py'
        };

        combo_point {
            bindings = <&point>;
            key-positions = <145 16 34>; // 'A' and 'P'
            // Key strokes: 'po'
        };

        combo_question {
            bindings = <&question>;
            key-positions = <146 13 28>; // 'A' and 'Q'
            // Key strokes: 'qt'
        };

        combo_quick {
            bindings = <&quick>;
            key-positions = <147 13 44>; // 'A' and 'K'
            // Key strokes: 'qk'
        };

        combo_quickly {
            bindings = <&quickly>;
            key-positions = <148 13 21>; // 'A' and 'Y'
            // Key strokes: 'qy'
        };

        combo_quite {
            bindings = <&quite>;
            key-positions = <149 13 32>; // 'A' and 'E'
            // Key strokes: 'qe'
        };

        combo_read {
            bindings = <&read>;
            key-positions = <150 26 40>; // 'A' and 'D'
            // Key strokes: 'rd'
        };

        combo_really {
            bindings = <&really>;
            key-positions = <151 26 19>; // 'A' and 'L'
            // Key strokes: 'rl'
        };

        combo_right {
            bindings = <&right>;
            key-positions = <152 26 29>; // 'A' and 'G'
            // Key strokes: 'rg'
        };

        combo_river {
            bindings = <&river>;
            key-positions = <153 26 41>; // 'A' and 'R'
            // Key strokes: 'rv'
        };

        combo_same {
            bindings = <&same>;
            key-positions = <155 27 30>; // 'A' and 'M'
            // Key strokes: 'sm'
        };

        combo_second {
            bindings = <&second>;
            key-positions = <157 27 31>; // 'A' and 'N'
            // Key strokes: 'sn'
        };

        combo_should {
            bindings = <&should>;
            key-positions = <159 27 45>; // 'A' and 'D'
            // Key strokes: 'sh'
        };

        combo_small {
            bindings = <&small>;
            key-positions = <162 27 19>; // 'A' and 'L'
            // Key strokes: 'sl'
        };

        combo_something {
            bindings = <&something>;
            key-positions = <164 27 28>; // 'A' and 'T'
            // Key strokes: 'st'
        };

        combo_start {
            bindings = <&start>;
            key-positions = <170 27 26>; // 'A' and 'R'
            // Key strokes: 'sr'
        };

        combo_state {
            bindings = <&state>;
            key-positions = <171 27 25>; // 'A' and 'T'
            // Key strokes: 'st'
        };

        combo_study {
            bindings = <&study>;
            key-positions = <175 27 22>; // 'A' and 'D'
            // Key strokes: 'sd'
        };

        combo_talk {
            bindings = <&talk>;
            key-positions = <179 28 19>; // 'A' and 'L'
            // Key strokes: 'tl'
        };

        combo_technology {
            bindings = <&technology>;
            key-positions = <183 28 30>; // 'A' and 'H'
            // Key strokes: 'th'
        };

        combo_together {
            bindings = <&together>;
            key-positions = <193 28 29>; // 'A' and 'T'
            // Key strokes: 'tg'
        };

        combo_tomorrow {
            bindings = <&tomorrow>;
            key-positions = <194 28 30>; // 'A' and 'M'
            // Key strokes: 'tm'
        };

        combo_under {
            bindings = <&under>;
            key-positions = <198 20 31>; // 'A' and 'N'
            // Key strokes: 'un'
        };

        combo_value {
            bindings = <&value>;
            key-positions = <202 41 19>; // 'A' and 'L'
            // Key strokes: 'vl'
        };

        combo_where {
            bindings = <&where>;
            key-positions = <208 13 26>; // 'A' and 'R'
            // Key strokes: 'wr'
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            //  0   1  2  3 4   5            6   7  8 9  10 11
            //  12 13 14 15 16 17            18 19 20 21 22 23
            //  24 25 26 27 28 29            30 31 32 33 34 35
            //  36 37 38 39 40 41            42 43 44 45 46 47
            //          48 49 50 51    52 53   54 55 56 57

            label = "Base";
            bindings = <
&kp ESC    &kp N1            &kp N2       &kp N3          &kp N4                       &kp N5                              &kp N6  &kp N7                    &kp N8           &kp N9       &kp N0             &kp GRAVE
&kp CLCK   &kp Q             &kp W        &kp F           &kp P                        &kp B                               &kp J   &kp L                     &kp U            &kp Y        &kp SEMICOLON      &kp MINUS
&kp TAB    &mt LEFT_SHIFT A  &mt LCTRL R  &mt LEFT_ALT S  &mt LEFT_GUI T               &kp G                               &kp M   &mt LEFT_META N           &mt RIGHT_ALT E  &mt LCTRL I  &mt RIGHT_SHIFT O  &kp SQT
&kp LSHFT  &kp Z             &kp X        &kp C           &kp D                        &kp V   &breakpoint    &breakpoint  &kp K   &kp H                     &kp COMMA        &kp DOT      &kp FSLH           &kp RSHFT
                                          &kp LEFT_GUI    &mt LEFT_SHIFT LEFT_CONTROL  &mo 1   &kp SPACE      &kp RET      &mo 2   &mt LEFT_SHIFT RIGHT_ALT  &kp LGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "Lower";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4                       &kp C_MUTE        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans
&kp GRAVE   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp N5                             &kp NUMBER_6      &kp N7             &kp N8           &kp N9                &kp N0                &kp ESC
&kp TILDE   &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR      &kp PRCNT                          &kp CARET         &kp AMPS           &kp KP_MULTIPLY  &kp LPAR              &kp RPAR              &kp PIPE
&kp LSHFT   &kp EQUAL     &kp MINUS     &kp PLUS      &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans    &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMI         &kp COLON             &kp NON_US_BACKSLASH  &kp RSHFT
                                        &trans        &trans          &trans           &trans    &trans  &trans            &kp RGUI           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "Raise";
            bindings = <
&kp F1    &kp F2           &kp F3  &kp F4    &kp F5     &kp F6                                  &kp F7    &kp F8        &kp F9        &kp F10    &kp F11     &kp F12
&none     &vq              &vw     &tup      &tmuxv     &tmuxnew                                &kp N6    &kp N7        &kp UP_ARROW  &kp N9     &kp N0      &none
&none     &kp EXCLAMATION  &tleft  &tdown    &tright    &none                                   &kp BSPC  &kp LEFT      &kp DOWN      &kp RIGHT  &kp DELETE  &none
&kp CAPS  &tzoom           &vx     &cc       &cv        &tbegin   &kp PAGE_UP    &kp PAGE_DOWN  &tmove    &tpaste       &kp EQUAL     &kp LBKT   &kp RBKT    &kp BSLH
                                   &kp LALT  &kp LCTRL  &kp LGUI  &kp RALT       &kp SPACE      &kp RALT  &kp RG(RALT)  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&none   &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        numbers {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
